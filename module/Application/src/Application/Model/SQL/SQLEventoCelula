-- Table: evento_celula

-- DROP TABLE evento_celula;

CREATE TABLE evento_celula
(
  id serial NOT NULL, -- Identificação do dados do evento tipo célula
  nome_hospedeiro character varying(80) NOT NULL, -- Nome do hospedeiro da célula
  telefone_hospedeiro bigint NOT NULL, -- Telefone do hospedeiro com 9 digitos com DDD
  logradouro character varying(100) NOT NULL, -- Logradouro da célula
  complemento character varying(100), -- Complemento do endereço da célula
  evento_id integer NOT NULL, -- Identificação do evento
  bairro character varying(30), -- Bairro do local da célula
  cidade character varying(30) NOT NULL, -- Cidade do local da célula
  cep bigint NOT NULL, -- CEP do local da célula
  uf character varying(30) NOT NULL, -- Unidade Federativa da célula
  CONSTRAINT pk_evento_celula PRIMARY KEY (id),
  CONSTRAINT fk_evento_celula_evento_id FOREIGN KEY (evento_id)
      REFERENCES evento (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE evento_celula
  OWNER TO postgres;
COMMENT ON TABLE evento_celula
  IS 'Tabela para amarzenas dados do evento tipo célula';
COMMENT ON COLUMN evento_celula.id IS 'Identificação do dados do evento tipo célula';
COMMENT ON COLUMN evento_celula.nome_hospedeiro IS 'Nome do hospedeiro da célula';
COMMENT ON COLUMN evento_celula.telefone_hospedeiro IS 'Telefone do hospedeiro com 9 digitos com DDD';
COMMENT ON COLUMN evento_celula.logradouro IS 'Logradouro da célula';
COMMENT ON COLUMN evento_celula.complemento IS 'Complemento do endereço da célula';
COMMENT ON COLUMN evento_celula.evento_id IS 'Identificação do evento';
COMMENT ON COLUMN evento_celula.bairro IS 'Bairro do local da célula';
COMMENT ON COLUMN evento_celula.cidade IS 'Cidade do local da célula';
COMMENT ON COLUMN evento_celula.cep IS 'CEP do local da célula';
COMMENT ON COLUMN evento_celula.uf IS 'Unidade Federativa da célula';

